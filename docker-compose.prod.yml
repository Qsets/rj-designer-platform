version: '3.8'

services:
  # MySQL数据库 - 生产环境配置
  mysql:
    image: mysql:8.0
    container_name: junjian-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: junjian_platform
      MYSQL_USER: junjian
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    ports:
      - "127.0.0.1:3306:3306"  # 仅本地访问
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/conf.d:/etc/mysql/conf.d
    networks:
      - junjian-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    secrets:
      - mysql_root_password
      - mysql_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存 - 生产环境配置
  redis:
    image: redis:7-alpine
    container_name: junjian-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "127.0.0.1:6379:6379"  # 仅本地访问
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - junjian-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5

  # 后端Spring Boot应用 - 生产环境配置
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: junjian-backend-prod
    environment:
      SPRING_PROFILES_ACTIVE: production
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/junjian_platform?useSSL=true&serverTimezone=Asia/Shanghai
      SPRING_DATASOURCE_USERNAME: junjian
      SPRING_DATASOURCE_PASSWORD_FILE: /run/secrets/mysql_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      ALIPAY_APP_ID: ${ALIPAY_APP_ID}
      ALIPAY_PRIVATE_KEY_FILE: /run/secrets/alipay_private_key
      WECHAT_APP_ID: ${WECHAT_APP_ID}
      WECHAT_APP_SECRET_FILE: /run/secrets/wechat_app_secret
    ports:
      - "127.0.0.1:8080:8080"  # 仅本地访问
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - junjian-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    secrets:
      - mysql_password
      - jwt_secret
      - alipay_private_key
      - wechat_app_secret
    volumes:
      - app_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # 前端React应用 - 生产环境配置
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: junjian-frontend-prod
    ports:
      - "127.0.0.1:3000:80"  # 仅本地访问
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - junjian-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 10s
      retries: 3

  # Nginx反向代理 - 生产环境配置
  nginx:
    image: nginx:alpine
    container_name: junjian-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - junjian-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      timeout: 10s
      retries: 3

  # 监控服务 - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: junjian-prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - junjian-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # 监控服务 - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: junjian-grafana
    ports:
      - "127.0.0.1:3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - junjian-network
    restart: unless-stopped
    secrets:
      - grafana_password
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  junjian-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  alipay_private_key:
    file: ./secrets/alipay_private_key.txt
  wechat_app_secret:
    file: ./secrets/wechat_app_secret.txt
  grafana_password:
    file: ./secrets/grafana_password.txt